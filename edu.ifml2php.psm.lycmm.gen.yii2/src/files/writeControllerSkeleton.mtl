[comment encoding = UTF-8 /]
[**
 * The documentation of the module writeControllerSkeleton.
 */]
[module writeControllerSkeleton('http://www.application.org')]

[import services::helperYii2InputPaths /]
[import services::helperFileReader /]
[import services::helperApplication /]

[**
 * The documentation of the template generateElement.
 * @param aModel
 */]


[comment]quiza pueda traer el path desde el helper y no pasarselo como param[/comment]
[template public writeControllerSkeleton(path : String, controller : Controller, appName : String, pmName : String)]
[file (path + controller.name + 'Controller.php', false, 'UTF-8')]
<?php

namespace app\controllers\[pmName/]Controllers;
use Yii;
use yii\web\Controller;
use yii\db\Connection: [comment TODO: este import no debe ser un supuesto/]

class [controller.name/]Controller extends Controller
{
[for (method : Method | controller.methods)]

   function action[ method.name.toUpperFirst() /]()
   {   
    [if ( method.outParameters->size() > 0)]
    	//Los parámetros ([for (parameter : Attribute | method.outParameters) separator(', ' )]$[parameter.name/][/for]) fueron modelados como de salida. Verifique si son retornados al módulo llamador o pasado a otro 
    [else]
	
	[/if] 
   }
[/for]	
[/file]
[/template]

[template public registerController(pc : PackageController)]

[file (self.getConfigAppPath(), true, 'UTF-8')]
if (is_null($config[ '[' /]'controllerMap'[']'/])){
        $config['['/]'controllerMap'[']'/] = ['['/][']'/];
    }
[for (controller : Controller | pc.controllers)]
	[for (line : String | getAppConfig().tokenize('\n'))]
		[if (line.contains('return $config;'))] 
			[let ifmlControllerMap : String = '\\$ifmlControllerMap = [\'' + controller.name.toLowerCase() + '\' => \'\\\\app\\\\controllers\\\\' + pc.name + 'Controllers\\\\' + controller.name +'Controller\'];']
			[let config : String = '\\$config[\'controllerMap\'] = array_merge(\\$ifmlControllerMap, \\$config[\'controllerMap\']);']
[line.replace('return \\$config;', ifmlControllerMap + '\n' + config)/]
			[/let]
			[/let]
		[/if]
	[/for]
[/for]
[/file]
	


[comment]$ifmlControllerMap = ['['/]'[nameController.toLowerCase()/]' => '\app\controllers\[namePackage/]Controllers\[nameController/]Controller'[']'/];
$config['['/]'controllerMap'[']'/] = array_merge($ifmlControllerMap, $config['['/]'controllerMap'[']'/]);[/comment]
[/template]